#!/bin/bash
#* Initialize a new TypeScript project

base_test='test(`two plus two is four`, () =>\n
{\n
	const a = (b:number, c:number) =>\n
	{\n
		return b+c;\n
	};\n
	expect(a(2, 2)).toBe(4);\n
});'

# Create the necessary directories
mkdir bin src src/tests

# Create the main file, with a hello world message
printf 'import logger from "./logger.js";\nlogger.debug("Hello World!")' > src/index.ts

# Create a test file, with a simple test
echo -e $base_test > src/tests/index.test.ts

# Create a .gitignore file
printf "node_modules\nbin" > .gitignore

# Initialize npm
npm init -y

# Install the necessary packages
npm i -D eslint nodemon \
		@typescript-eslint/parser @typescript-eslint/eslint-plugin eslint-plugin-file-extension-in-import-ts\
		jest @types/jest \
		winston

# Copy the configuration files
cp ~/config_files/tsconfig.json ~/config_files/.eslintrc.json ~/config_files/jest.config.js .
cp ~/config_files/logger.ts ./src/
# Make Node project a module
sed -i 's|"scripts"|"type": "module",\n  &|' package.json  

# Scripts
dev_script='"dev": "nodemon bin/index.js"'
test_script='NODE_OPTIONS=\\\"$NODE_OPTIONS --experimental-vm-modules\\\" npx jest --watchAll'
clean_test='"clean": "rm -rf bin;tsc"'
# Add the test and dev scripts to package.json
sed -i "s|echo \\\\\"Error: no test specified\\\\\" && exit 1|${test_script}|" package.json 
sed -i "s|\\\"test\\\":.*|${dev_script},\n    &|" package.json   
sed -i "s|\\\"test\\\":.*|${clean_test},\n    &|" package.json   