#!/bin/env bash

github_profile="NikosGour"

# get params to get project name
project_name=""

usage() {
	printf "Usage: go_init [option] project_name\n\n\t-g\tIf you are planning on publishing on github. Make sure to change your github username in the script\n"
}

github_flag=false

# if no arguments pass print usage
if [ "$1" == "" ]; then
	usage
	exit 1
fi

while [ "$1" != "" ]; do
	case $1 in
	-g)
		github_flag=true
		;;
	# release)
	# 	release_flag=true
	# 	;;
	# clean)
	# 	clean_flag=true
	# 	;;
	*)
		project_name=$1
		;;
	esac
	shift
done

mkdir $project_name
cd $project_name
mod_name="$project_name"
if [ $github_flag == true ]; then
	git init
	mod_name="github.com/$github_profile/$project_name"
	go mod init github.com/$github_profile/$project_name
else
	go mod init $project_name
fi
mkdir src out
printf "out/" >.gitignore

mkdir src/build
printf "//go:build debug\n\npackage build\n\nconst (\n\tDEBUG_MODE = true\n)" >src/build/config.debug.go
printf "//go:build !debug\n\npackage build\n\nconst (\n\tDEBUG_MODE = false\n)" >src/build/config.release.go

printf "package main\n\nimport (\n\t\"fmt\"\n\t\"$mod_name/src/build\"\n)\n\n" >src/main.go
printf "func main(){\n\tfmt.Printf(\"DEBUG_MODE = %%t\\\n\",build.DEBUG_MODE)\n}" >>src/main.go

cp ~/config_files/go_build.sh build.sh
sed -i "s/__PROJECT_NAME__/$project_name/g" build.sh
chmod +x build.sh
